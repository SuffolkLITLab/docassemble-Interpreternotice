include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.MassAccess:massaccess.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Interpreter Notice
  short title: |
    Interpreter Notice
  tags:
    - BE-00-00-00-00
    - BE-04-00-00-00
    - ED-00-00-00-00
    - ES-00-00-00-00
    - FA-00-00-00-00
    - FA-07-00-00-00
    - HE-00-00-00-00
    - HO-00-00-00-00
    - IM-00-00-00-00
    - MO-00-00-00-00
    - Other
    - RI-10-00-00-00
---
comment: |
  This section is used by AssemblyLine to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['InterpreterNotice__with_variables']"):
    interview_metadata.initializeObject('InterpreterNotice__with_variables')
  interview_metadata['InterpreterNotice__with_variables'].update({
    'title': 'Interpreter Notice',
    'short title': 'Interpreter Notice',
    'description': 'Notice of Interpreter Request',
    'original_form': '',
    'allowed courts': [
     'Appeals Court',
     'Boston Municipal Court',
     'District Court',
     'Housing Court',
     'Juvenile Court',
     'Land Court',
     'Probate and Family Court',
     'Superior Court',
    ],
    'categories': [
      'BE-00-00-00-00',
      'BE-04-00-00-00',
      'ED-00-00-00-00',
      'ES-00-00-00-00',
      'FA-00-00-00-00',
      'FA-07-00-00-00',
      'HE-00-00-00-00',
      'HO-00-00-00-00',
      'IM-00-00-00-00',
      'MO-00-00-00-00',
      'Other',
      'RI-10-00-00-00',
      'Intellectual Property',
      'Tax',
      'Tort',
    ],
    'logic block variable': 'InterpreterNotice__with_variables',
    'attachment block variable': 'InterpreterNotice__with_variables_attachment',
    'typical role': 'unknown',
  })
---
code: |
  interview_short_title = 'Ask the Court for an interpreter'
---
code: |
  al_form_type = 'starts_case'
---
features:
  navigation: True
---
sections:
  - review_InterpreterNotice__with_variables: Review your answers
---
objects:
  #- plaintiffs: ALPeopleList.using(there_are_any=True)
  - users: ALPeopleList.using(there_are_any=True )
  - other_parties: ALPeopleList
  #- defendants: ALPeopleList.using(there_are_any=True)
---
code: |
  party_role = user_role.title()
---
###################### Main order ######################
mandatory: True
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
id: main_order_InterpreterNotice__with_variables
code: |
  al_intro_screen
  InterpreterNotice__with_variables_intro
  # Interview order block has form-specific logic controlling order/branching
  interview_order_InterpreterNotice__with_variables
  signature_date
  # Save (anonymized) interview statistics.
  store_variables_snapshot(data={'zip': users[0].address.zip})
  InterpreterNotice__with_variables_preview_question  # Pre-canned preview screen
  basic_questions_signature_flow
  users[0].signature
  InterpreterNotice__with_variables_download
---
#################### Interview order #####################
comment: |
  Controls order and branching logic of questions in the interview
id: interview_order_InterpreterNotice__with_variables
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["InterpreterNotice__with_variables"]["allowed courts"]
  nav.set_section('review_InterpreterNotice__with_variables')
  # Below sets the user_role by asking a question.
  # You can set user_role directly instead to either 'plaintiff' or 'defendant'
  user_ask_role
  users.gather()
  other_parties.gather()
  users[0].address.address
  user_preferred_language
  set_progress(25.0)
  have_docket_number
  trial_court
  set_parts(subtitle=str(users))
  set_progress(50.0)
  interview_order_InterpreterNotice__with_variables = True
---
comment: |
  This question is used to introduce your interview. Please customize
id: Interpreter Notice
continue button field: InterpreterNotice__with_variables_intro
question: |
  Notice of Interpreter Request
subquestion: |
  You have the right to an interpreter.
  
  Give this form to the court if you need an interpreter.

  The form tells the court:

  * The language you need to be able to communicate with the court in, and
  * You need the court to appoint and pay for an interpreter.
---
id: Review your form before you sign it
continue button field: InterpreterNotice__with_variables_preview_question
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page. 
  
   ${ al_user_bundle.as_pdf(key='preview') }
  
  Click the image to open it in a new tab. Click the 'Make changes' button to fix any mistakes.
  
  ${ action_button_html(url_action('review_InterpreterNotice__with_variables'), label='Make changes', color='info') } 
  
  Remember to come back to this window to continue and sign your form.
---
id: language
question: |
  What language do you need the interpreter to use?
fields:
  - 'Preferred language': user_preferred_language
---
id: Docket number
Question: |
  Do you have a docket number for your case?
fields:
  - no label: have_docket_number
    datatype: yesnoradio
    help: |
      Look at the top right corner of any papers the court gave you. 
      % if al_form_type == 'starts_case':
      The court may not have given you a Docket Number if you are just starting the case. 
      % endif
  - Docket number: docket_number
    show if: have_docket_number
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court
  # TODO: is there a better default? Probably very case specific
  addresses_to_search = [users[0].address]
---
progress: 100
id: download
event: InterpreterNotice__with_variables_download
question: |
  Your form is ready to download.
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Make changes" button to fix any mistakes. 
  
  ${ action_button_html(url_action('review_InterpreterNotice__with_variables'), label='Make changes', color='info') } 
  
  ${ al_user_bundle.download_list_html() }
  
  ${ al_user_bundle.send_button_html() }
---
objects:
  - InterpreterNotice__with_variables_attachment: ALDocument.using(title="Notice of Interpreter Request", filename="InterpreterNotice", enabled=True, has_addendum=False)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[InterpreterNotice__with_variables_attachment], filename="InterpreterNotice_-_with_variables.pdf", title="All forms to download for your records")
  - al_court_bundle: ALDocumentBundle.using(elements=[InterpreterNotice__with_variables_attachment], filename="InterpreterNotice_-_with_variables.pdf", title="All forms to download for your records")
---
attachment:
    variable name: InterpreterNotice__with_variables_attachment[i]
    name: Interpreter Notice
    filename: Request for an Interpreter Notice
    docx template file: InterpreterNotice_-_with_variables.docx
---
id: InterpreterNotice__with_variables review screen
event: review_InterpreterNotice__with_variables
question: |
  Review Screen
subquestion: |
  Edit your answers below
review: 
  - Edit: user_preferred_language
    button: |
      **Preferred language**:
      ${ user_preferred_language }
  - Edit: party_role
    button: |
      **Party role**:
      ${ party_role }
  - Edit: docket_number
    button: |
      **Court docket number**:
      ${ trial_court_docket_number }
  - Edit: users[0].signature
    button: |
      **users[0].signature**:
      ${ users[0].signature }
  - Edit: users[0].address.address
    button: |
      **users[0].address.address**:
      ${ users[0].address.address }
  - Edit: trial_court.address.county
    button: |
      **trial_court.address.county**:
      ${ trial_court.address.county }
  - Edit: users[0].name.first
    button: |
      **users**

      % for my_var in users:
        * ${ my_var }
      % endfor
    # NOTE: a question block with 'users.revisit'
    # lets the user edit all of the items at once
  - Edit: trial_court
    button: |
      **trial_court**:
      ${ trial_court }
  - Edit: plaintiffs[0].name.first
    button: |
      **plaintiffs**

      % for my_var in plaintiffs:
        * ${ my_var }
      % endfor
    # NOTE: a question block with 'plaintiffs.revisit'
    # lets the user edit all of the items at once
  - Edit: defendants[0].name.first
    button: |
      **defendants**

      % for my_var in defendants:
        * ${ my_var }
      % endfor
    # NOTE: a question block with 'defendants.revisit'
    # lets the user edit all of the items at once
